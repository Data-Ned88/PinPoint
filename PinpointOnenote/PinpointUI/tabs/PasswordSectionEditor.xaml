<UserControl x:Class="PinpointUI.tabs.PasswordSectionEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PinpointUI.tabs"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:pin="clr-namespace:PinpointOnenote;assembly=PinpointOnenote"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="odpLoginTypesEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="pin:LoginTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Grid Name="PasswordTabMainGrid">
            <!-- Design this next time.
            1. Buttons: Exit App.| Publish to One Note | Run security report (Modal with option to publish) | Back to notebooks (double click with prompt to publish).
            2. All about the change tracking!! 
            3. All publish operations have to check if section is locked.
            4. The grid is a reporting data grid with the features. To the right, is an edit grid with all editable fields.
            4a. If count selected items on grid 0, edit fields are blank, 'Update' button is greyed out, Delete and Delete All selected are greyed out. Add New Record is activated.
            4b. If count selected items on grid >0 first-selected SelectedItems member popualtes the screen. All buttons are active, but the Add New record's action (if statement in codebehind) clears the edit fields and sets the selected items to 0.
            5. Clearance at the bottom to make space for a 'Import from file option, which allows the user to load as TXT or CSV. THis has override or append mode.
        
            -->
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="14*"/>
            <RowDefinition Height="75*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Rectangle Fill="LightGray"/>
        <Rectangle Grid.Row="3" Fill="LightGray"/>
        <Grid x:Name="controlButtonsGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30*"/>
                <ColumnDefinition Width="22*"/>
                <ColumnDefinition Width="18*"/>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="PwordTabBackToSections" Content="&lt;&lt; Back to OneNote Sections" Margin="0,0,0,0" Width="190" Height="23" HorizontalAlignment="Center" Click="PwordTabBackToSections_Click"/>
            <Button x:Name="PwordTabSave" Grid.Column="1" Content="Save to OneNote" Margin="0,0,0,0" Width="120" Height="23" HorizontalAlignment="Center" Click="PwordTabSave_Click"/>
            <Button x:Name="PwordTabClear" Grid.Column="2" Content="Clear Changes" Margin="0,0,0,0" Width="100" Height="23" HorizontalAlignment="Center" Click="PwordTabClear_Click"/>
            <Button x:Name="PwordTabExit" Grid.Column="4" Content="Exit PinPoint" Margin="0,0,0,0" Width="100" Height="23" HorizontalAlignment="Center" Click="PwordTabExit_Click"/>
        </Grid>
        <Grid x:Name="ThisSectionHeaderInfo" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="70*"/>
                <RowDefinition Height="30*"/>
            </Grid.RowDefinitions>
            <Rectangle Fill="DarkGray"/>
            <Rectangle Grid.Row="1" Fill="Gray"/>
            <TextBlock x:Name="pwordTabSectionTitle" Text="OneNote Password Section: &lt;&lt;Placeholder Section Name&gt;&gt;*" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" TextWrapping="Wrap" Foreground="AliceBlue" FontWeight="Bold" FontSize="18px"/>
            <TextBlock x:Name="pwordTabSectionSubTitle" Text="(Notebook: &lt;&lt;Placeholder Notebook Name&gt;&gt;   Section Group: &lt;&lt;Placeholder Section Group Name if exists&gt;&gt;)"  Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" TextWrapping="Wrap" Foreground="AliceBlue"/>
        </Grid>
        <Grid x:Name="pwordTabEditor" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="30*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="existingPasswordsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="86*"/>
                    <RowDefinition Height="14*"/>
                </Grid.RowDefinitions>
                <DataGrid 
                x:Name="existingPasswords"
                CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                ItemsSource="{Binding PasswordBank, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                SelectionMode="Extended" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="existingPasswords_SelectionChanged"
                    Loaded="ExistingPasswords_Loaded"
                    Background="#AFAD8B">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy"
                      Command="{Binding CopyCellCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Description" Binding="{Binding LoginDescription}" Width="17*"/>
                        <DataGridComboBoxColumn
                            x:Name="LoginTypeColumn"
                            Header="Type" Width="8.5*"
                            ItemsSource="{Binding Source={StaticResource odpLoginTypesEnum}}"
                            SelectedItemBinding="{Binding LoginType}"                        
                            />
                        <DataGridTextColumn Header="URL" Binding="{Binding LoginUrl}" Width="15*"/>
                        <DataGridTextColumn Header="Username" Binding="{Binding LoginUsername}" Width="15*"/>
                        <DataGridTextColumn Header="Password/PIN" Binding="{Binding LoginPass}" Width="15*"/>
                        <DataGridCheckBoxColumn Header="2FA" Binding="{Binding HasTwoFa}" Width="6*"/>
                        <DataGridTextColumn Header="2FA Method" Binding="{Binding TwoFaMethod}" Width="13.5*"/>
                        <DataGridTemplateColumn Header="Strength" Width="10*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="StrengthColInGrid" Text="{Binding LoginStrength.Score}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                    </DataGrid.Columns>
                </DataGrid>
                <Rectangle Fill="#AFAD8B" Grid.Row="1"/>
                <Grid x:Name="existingPasswordsButtonsGrid" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnNewPassInExisting" Content="Add New Password" Margin="0,0,0,0" Width="120" Height="23" HorizontalAlignment="Center" Background="Beige" Click="btnNewPassInExisting_Click"/>
                    <Button x:Name="btnImportFromFile" Content="Import Passwords from CSV..." Margin="0,0,0,0" Width="165" Height="23" HorizontalAlignment="Center" Background="Beige" Grid.Column="1" Click="btnImportFromFile_Click"/>
                </Grid>
            </Grid>
            <Rectangle Fill="Beige" Grid.Column="1"/>
            <Grid x:Name="singleItemEditorGrid" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="8*"/>
                    <RowDefinition Height="69*"/>
                    <RowDefinition Height="23*"/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="singleItemAreaHeader" Text="[New Password/selected Password/ N Passwords Selected (no editor)]" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,5,0" TextWrapping="Wrap" FontWeight="DemiBold"/>
                <Grid x:Name="singleItemEditArea" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.2*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="0.9*"/>
                        <RowDefinition Height="11.4*"/>
                        <RowDefinition Height="1.3*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="38*"/>
                        <ColumnDefinition Width="62*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="singleItemDescLabel" Content="Description:" VerticalAlignment="Center" Grid.Row="1" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemTypeLabel" Content="Type:" VerticalAlignment="Center" Grid.Row="3" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemUrlLabel" Content="URL:" VerticalAlignment="Center" Grid.Row="5" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemUsernameLabel" Content="Username:" VerticalAlignment="Center" Grid.Row="7" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemPassPinLabel" Content="Password/PIN:" VerticalAlignment="Center" Grid.Row="9" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemTwoFaLabel" Content="2FA:" VerticalAlignment="Center" Grid.Row="11" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemTwoFaMethodLabel" Content="2FA Method:" VerticalAlignment="Center" Grid.Row="13" Margin="2,0,0,0"/>
                    <Label x:Name="singleItemStengthLabel" Content="Strength Score:" VerticalAlignment="Center" Grid.Row="15" Margin="2,0,0,0"/>
                    <TextBox x:Name="newItemDescInput" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"/>
                    <TextBox x:Name="selItemDescInput" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="2,0" 
                             Text="{Binding ElementName=existingPasswords, Path=SelectedItem.LoginDescription, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->
                    <ComboBox x:Name="newItemTypeInput" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="2" 
                              ItemsSource="{Binding Source={StaticResource odpLoginTypesEnum}}"
                              />
                    <ComboBox x:Name="selItemTypeInput" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="2"
                              ItemsSource="{Binding Source={StaticResource odpLoginTypesEnum}}" 
                              SelectedValue="{Binding ElementName=existingPasswords, Path=SelectedItem.LoginType, UpdateSourceTrigger=Explicit}"/><!--DATABINDING-->
                    <TextBox x:Name="newItemUrlInput" Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"/>
                    <TextBox x:Name="selItemUrlInput" Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"
                             Text="{Binding ElementName=existingPasswords, Path=SelectedItem.LoginUrl, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->
                    <TextBox x:Name="newItemUsernameInput" Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"/>
                    <TextBox x:Name="selItemUsernameInput" Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"
                             Text="{Binding ElementName=existingPasswords, Path=SelectedItem.LoginUsername, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->
                    <Grid x:Name="singleItemPasswordEntryGrid" Grid.Row="9" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*"/>
                            <ColumnDefinition Width="30*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="newItemPassPinInput" VerticalAlignment="Center" Margin="2,0"/>
                        <TextBox x:Name="selItemPassPinInput" VerticalAlignment="Center" Margin="2,0"
                                 TextChanged="selItemPassPinInput_TextChanged"
                                 Text="{Binding ElementName=existingPasswords, Path=SelectedItem.LoginPass, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->
                        <Button x:Name="btnPassPinAuto" Grid.Column="1" Margin="4" Content="&#x1F9E0;" Click="btnPassPinAuto_Click">
                            <Button.ToolTip>
                                <ToolTip>
                                    Click to auto-generate strong password or PIN
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                    </Grid>
                    <CheckBox x:Name="newItemTwoFaInput" Grid.Row="11" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"/>
                    <CheckBox x:Name="selItemTwoFaInput" Grid.Row="11" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"
                              IsChecked="{Binding ElementName=existingPasswords, Path=SelectedItem.HasTwoFa, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->
                    <TextBox x:Name="newItemTwoFaMethodInput" Grid.Row="13" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"/>
                    <TextBox x:Name="selItemTwoFaMethodInput" Grid.Row="13" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"
                             Text="{Binding ElementName=existingPasswords, Path=SelectedItem.TwoFaMethod, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->
                    <TextBox x:Name="newItemStrengthInput" Grid.Row="15" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"/>
                    <TextBox x:Name="selItemStrengthInput" Grid.Row="15" Grid.Column="1" VerticalAlignment="Center" Margin="2,0"
                             Text="{Binding ElementName=existingPasswords, Path=SelectedItem.LoginStrength.Score, UpdateSourceTrigger=Explicit}"/><!--DATA BINDING-->

                </Grid>
                <Grid x:Name="singleItemEG_ButtonGrid" Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50*"/>
                        <RowDefinition Height="50*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="52*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="47*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnAddNew" Content="Add" Margin="0,10,0,0" Width="110" Height="23" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" Background="#DFFE9A" Click="btnAddNew_Click"/>
                    <Button x:Name="btnUpdate" Content="Update" Margin="0,10,0,0" Width="110" Height="23" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0" Background="#DFFE9A" Click="btnUpdate_Click"/>
                    <Button x:Name="btnUndoChanges" Content="&#x1F808; Undo &amp; Close" Margin="0,10,0,0" Width="100" Height="23" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" Background="#FFFF9B" Click="btnUndoChanges_Click"/>
                    <Button x:Name="btnCloseNewEditor" Content="Close" Margin="0,10,0,0" Width="100" Height="23" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" Background="#FFFF9B" Click="btnCloseNewEditor_Click"/>
                    <Button x:Name="btnDeleteSelected" Content="&#x1F5D1; Delete Selected" Margin="0,0,0,0" Width="110" Height="23" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1" Background="#F7B625" Click="btnDeleteSelected_Click"/>
                    <Button x:Name="btnDeleteAll" Content="&#x1F5D1; Delete All" Margin="0,0,0,0" Width="100" Height="23" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="1" Background="#FF9B57" Click="btnDeleteAll_Click"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
